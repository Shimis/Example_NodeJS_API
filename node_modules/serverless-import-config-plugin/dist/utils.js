"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const resolve_1 = __importDefault(require("resolve"));
exports.isObject = (value) => typeof value === 'object' && value != null;
exports.tryOrUndefined = (func) => {
    try {
        return func();
    }
    catch (error) {
        return undefined;
    }
};
// some plugins like serverless-webpack have issues with paths comes from outside of main project
// which is a popular case for monorepo like Lerna; we need to preserve symlinks to make them works;
// require.resolve is not used here because it doesn't support preserveSymlinks flag yet
exports.resolveModule = (id, { basedir }) => resolve_1.default.sync(id, { basedir, preserveSymlinks: true });
//# sourceMappingURL=utils.js.map