"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_differencewith_1 = __importDefault(require("lodash.differencewith"));
const lodash_isequal_1 = __importDefault(require("lodash.isequal"));
const utils_1 = require("./utils");
const merge = (target, source) => {
    if (source == null) {
        return target;
    }
    if (Array.isArray(target) && Array.isArray(source)) {
        // add unique elements of source into target with deep equality comparison
        return target.concat(lodash_differencewith_1.default(source, target, lodash_isequal_1.default));
    }
    Object.entries(source).forEach(([key, value]) => {
        if (utils_1.isObject(value) && utils_1.isObject(target[key])) {
            // merge deeply
            target[key] = merge(target[key], value);
        }
        else if (target[key] === undefined) {
            // set new value but do not override
            target[key] = value;
        }
    });
    return target;
};
exports.default = merge;
//# sourceMappingURL=merge.js.map